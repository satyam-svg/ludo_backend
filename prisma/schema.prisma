generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(uuid())
  email        String  @unique
  password     String // Changed to required field
  wallet       Float   @default(0)
  referralCode String? @unique

  // Referral relations
  referrals  Referral[] @relation("Referrer")
  referredBy Referral?  @relation("Referee")

  // Game and financials
  games        Game[]
  transactions Transaction[]
  withdrawals  Withdrawal[]

  @@map("users")
}

model Referral {
  id String @id @default(uuid())

  // Referrer
  referrer   User   @relation("Referrer", fields: [referrerId], references: [id])
  referrerId String

  // Referee
  referee   User   @relation("Referee", fields: [refereeId], references: [id])
  refereeId String @unique

  createdAt DateTime @default(now())

  @@map("referrals")
}

model Game {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  score     Int
  duration  Int
  metadata  Json?
  createdAt DateTime @default(now())

  @@map("games")
}

model Transaction {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  amount    Float
  type      String   @default("deposit")
  createdAt DateTime @default(now())

  @@map("transactions")
}

model Withdrawal {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  amount    Float
  status    String   @default("pending")
  createdAt DateTime @default(now())

  @@map("withdrawals")
}
